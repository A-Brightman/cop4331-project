---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';
---





<html>
<Layout title="Welcome to Astro.">
	<head>
		
	</head>

	<body>
		<div id="page">

			<header>
				<!-- Will contain logo, title, and login button -->
				
				<img src="logo.png" alt="Hoof Hustler logo">
				

				<!-- login button  -->
				<button 
					onclick="document.getElementById('login-form').style.display='block'"
					style=
					"width: auto;
					float: right;
					margin: 10px 10px 10px 10px;
					border-radius: 6px;
					display: inline-block;
					"
					>Login
				</button>

				<div id="login-form" class="login-modal">

					<form 
					class="modal-content animate"
					action="/action_page.php"
					method="POST"
					>	

						<!-- closing button -->
						<span 
							onclick="document.getElementById('login-form').style.display='none'"
							class="close"
							style="
							color: #000000;
							position: relative;
							right:-90%;
							z-index: 2;
							top:0%;
							font-size:30px;"
							title="Close Modal">&times;
						</span>

						<!-- default profile pic image -->
						<div class="imgcontainer">
							<img src="img_avatar.png" alt="Avatar" class="avatar">
						</div>

						<!-- space to enter info -->
						<div class="container-top">
							<label for="uname" style="color: #888"><b>Username</b></label>
							<input type="text" placeholder="Enter Username" name="uname"
							required>

							<label for="psw" style="color: #888"><b>Password</b></label>
							<input type="password" placeholder="Enter Password" name="psw"
							required>
						
							<button type="submit"
							style="width:100%;
							padding:8px 18px;
							margin: 16px auto;
							display: inline-block;
							box-sizing: border-box;"
							>Submit</button>
						</div>

						<div class="container-bottom">
							<button onclick="document.getElementById('signup-form').style.display='block'; 
									document.getElementById('login-form').style.display='none'"
								type="button"	
								style="width:100%;
									"
							>Create New Account
							</button>
						</div>
					</form>
				</div>

				<!-- create new account form -->
				<div id="signup-form" class="signup-modal">
					<form class="modal-content animate">
					<!-- put backend signup stuff in form?-->

						<!-- another closing button -->
						<span 
							onclick="document.getElementById('signup-form').style.display='none';
							document.getElementById('login-form').style.display='block'"
							class="close"
							title="close modal"
							style="
								color: #000000;
								position: relative;
								right:-90%;
								z-index: 2;
								top:0%;
								font-size:30px;"
							>&times
						</span>

						<!-- signup form requires a username and a password
							needs to be able to check if these are available before submitting -->
						<div class="container-top">
							<label for="uname" style="color: #888"><b>Username</b></label>
							<input type="text" placeholder="Enter Username" name="uname"
							required>

							<label for="psw" style="color: #888"><b>Password</b></label>
							<input type="password" placeholder="Enter Password" name="psw"
							required>

							<button type="submit"
								style="width:100%;
								padding:8px 18px;
								margin: 16px auto;
								display: inline-block;
								box-sizing: border-box;"
								>Submit
							</button>

						</div>
					</form>
				</div>

			</header>

			<main>
				<!-- timer -->
				<section class="timer-box">
					<h1>Timer box</h1>
					<div class="timer">
						<!-- Tiimer for how long until the next race -->

					</div>
				</section>

				<section class="flex-container">
					<!-- current race info. Includes all horses and their info along with space to bet on each horse -->
					<section class="left">
						<h1>Left</h1>
						<div id="race-details">
							
							<table id="raceDetailsTable">
								<tbody>
								  <!-- Table body will be dynamically populated -->
								</tbody>
							  </table>
						
		
						</div>
					</section>
		
					<section class="middle">
						<h1>Middle</h1>
						<div class="animation-box">
							<!-- No idea how to do whats going to be here -->
		
						</div>
					</section>

					<section class="right">
						<h1>Right</h1>
						<div id="race-results">
							<!-- Table that will show the previous race details, the winner of the race, and whether or not the user won -->
							<table id="lastRaceResultTable">
								<tbody>
								  <!-- Table body will be dynamically populated -->
								</tbody>
							  </table>
						</div>
					</section>

				</section>

				<section class="bottom">
					<h1>Bottom</h1>
					<div class="all results">
						<!-- needs javascript to add new section for each new race result -->
						<table id="allResultsTable">
							<thead>
								<th> Winning Horse </th>
								<th> Track </th>
								<th> Weather </th>
							</thead>

							<tbody>
								<!-- dynamically populated with a file containing all the previous winners, probably from database, on server connection -->
								<!-- New row is added to the top everytime a race happens and winners are displayed -->
							</tbody>
							
						</table>
			
					<div>
				</section>
		
			</main>

			<footer>
				<h1>Footer</h1>
				<!-- idk if we need this, its just here -->
			</footer>
		</div>
	

		<script>
			//needs url of websocket server
			//wss is secure form of websockets, use that instead for realsies
			const ws = new WebSocket("ws://localhost:8082");

			//listening for connection to server
			ws.addEventListener("open", e=> {
				//on connection, display this message
				console.log("We are connected");
				
				//sends a message to the server (on connection)
				//stringify converts anything to a json object
				/*
				ws.send(JSON.stringify({
					x: 254,
					y: 100
				}));
				*/
			});

			//When a message is received
			ws.addEventListener("message", event=> {
				//event is an object which has properties, event.data would be the message that was received
				console.log(event);

				//dynamically creates a table for the upcoming race details using json objects from the HorseRace.java code running on its own server
				function makeRaceDetailsTable() {
    				let jsonData = JSON.parse(event.data);
					//this is the table we want to populate
					let tbody = document.querySelector("#raceDetailsTable tbody");
    				let table = document.createElement("table");

    				jsonData.forEach((obj: any) => {
						//each key and value will be in their own row
      					for (const key in obj) {
        					if (obj.hasOwnProperty(key)) {
								//make new row
								const row = document.createElement('tr');
          						const keyCell = document.createElement('td');
         						const valueCell = document.createElement('td');

          						keyCell.textContent = key;
          						valueCell.textContent = obj[key];

								//row consists of key and value
          						row.appendChild(keyCell);
          						row.appendChild(valueCell);
								//table consists of all rows
								table.appendChild(row);
        					}
     					}
    				});
					tbody!.appendChild(table);
  				}

				//Almost exactly the same as the last table maker, but chooses a different spot on the page to make the table
				function makeLastRaceResultTable(){
					let jsonData = JSON.parse(event.data);
					//this is the table we want to populate
					let tbody = document.querySelector("#lastRaceResultTable tbody");
    				let table = document.createElement("table");

    				jsonData.forEach((obj: any) => {
						//each key and value will be in their own row
      					for (const key in obj) {
        					if (obj.hasOwnProperty(key)) {
								//make new row
								const row = document.createElement('tr');
          						const keyCell = document.createElement('td');
         						const valueCell = document.createElement('td');

          						keyCell.textContent = key;
          						valueCell.textContent = obj[key];

								//row consists of key and value
          						row.appendChild(keyCell);
          						row.appendChild(valueCell);
								//table consists of all rows
								table.appendChild(row);
        					}
     					}
    				});
					tbody!.appendChild(table);
				}

				//creates the table with all the previous race results on server startup
				function makeAllRaceResultsTable(){

				}

				//adds a new row to the top of the allRaceResultsTable each time a winner is announced
				function addNewRow(){

				}



				//call makeRaceDetailsTable() on message event if the message does not contain the field for winner
				//this means the message is giving us race details, NOT the results of a race
				if(!event.data.includes("winner")){
					makeRaceDetailsTable();
				}
				//the only other message we will be getting (so far 3/31/24) is one that tells us the winner
				else{
					makeLastRaceResultTable();
					addNewRow();
				}



			});

		</script>



	</body>
</Layout>

	<style>
		header{
			width: 100%;
			height: auto;
			border: 2px solid #fefefe;
			padding: 10% auto;
			text-align: center;
		}
		header img{
			width: 50%;
			max-height: 8%;
		}
		h1{
			color: #fefefe;
			display: inline-block;
		}
		.timer-box{
			width: 100%;
			margin: 10px auto;
			border: 2px solid #fa8585;
			padding: 10% auto;
		}
		.flex-container{
			display: flex;
			flex-direction: row;
			height: auto;
		}
		.left{
			width: 20%;
			height: auto;
			margin: 10px auto;
			border: 2px solid #85fad7;
			padding:10% auto;
		}
		table, tr, td{
			background-color: #fefefe;
			border: solid;
		}
		.right{
			width: 20%;
			margin: 10px auto;
			border: 2px solid #85fa85;
			padding: 10% auto;
		}
		.middle{
			width: 50%;
			margin: 10px auto;
			border: 2px solid #faea85;
			padding: 10% auto;
		}
		.bottom{
			width: 100%;
			margin: 10px auto;
			border: 2px solid #d185fa;
			padding: 10% auto;
		}
		footer{
			width: 100%;
			margin: 10px auto;
			border: 2px solid #ed9a53;
			padding: 10% auto;
		}

		/* styling for login and signup forms */
		input[type=text], input[type=password]{
			width:100%;
			padding:10px 18px;
			margin: 8px auto;
			right: 10px;
			display: inline-block;
			box-sizing: border-box;
		}
		.imgcontainer{
			text-align: center;
			margin: 12px 0 5px 0;
			position: relative;
		}
		img.avatar{
			max-width: 50%;
			max-height: 50%;
			float: center;
			border-radius:50%;
		}
		.container-top{
			padding: 5px;
		}
		.container-bottom{
			padding: 5px;
		}
		.login-modal{
			display: none;
			position: fixed;
			z-index: 1;
			left: 0;
			top: 0;
			/*transform: translate(-50%, -50%);*/
			width: 100%;
			height: 100%;
			/*margin: auto;*/
			overflow: auto;
			background-color: rgba(0,0,0);
			background-color: rgba(0,0,0,0.4);
			padding-top: 60px;
		}
		.signup-modal{
			display: none;
			position: fixed;
			z-index: 1;
			left: 0;
			top: 0;
			/*transform: translate(-50%, -50%);*/
			width: 100%;
			height: 100%;
			/*margin: auto;*/
			overflow: auto;
			background-color: rgba(0,0,0);
			background-color: rgba(0,0,0,0.4);
			padding-top: 60px;
		}
		.modal-content{
			width: 30%;
			height: auto;
			margin: 5% auto 15% auto;
			border: 1px solid #888;
			background-color: #fefefe;
		}
		/* styling for login form ends */
	</style>
</html>
